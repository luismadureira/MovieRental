name: Build & Deploy to AKS

on:
  push:
    branches: [ "main" ]

env:
  RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  CLUSTER_NAME: ${{ secrets.AZURE_AKS_CLUSTER }}
  ACR_NAME: ${{ secrets.ACR_NAME }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get ACR login server
        id: acr
        run: echo "REGISTRY=$(az acr show -n $ACR_NAME --query loginServer -o tsv)" >> $GITHUB_ENV

      - name: Build and Push image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:${{ github.sha }} .
          az acr login --name $ACR_NAME
          docker push $REGISTRY/$IMAGE_NAME:${{ github.sha }}

      - name: Set AKS context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Deploy to AKS
        uses: azure/k8s-deploy@v5
        with:
          namespace: prod
          manifests: |
            k8s/deployment.yaml
            k8s/service.yaml
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Verify rollout
        run: kubectl rollout status deployment/movierental-api -n prod --timeout=180s
